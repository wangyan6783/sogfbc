{"version":3,"sources":["components/Header.tsx","components/Navbar.tsx","components/Footer.tsx","components/MainModCol1.tsx","components/MainModCol2.tsx","components/MainModCol3.tsx","components/MainModule.tsx","pages/HomePage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","className","Navbar","Footer","MainModCol1","src","alt","MainModCol2","MainModCol3","MainModule","HomePage","App","path","exact","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6NAWeA,EATU,WACvB,OACE,4BAAQC,UAAU,UAChB,gFACA,oEC6DSC,EAjEU,WACvB,OACE,6BACE,wBAAID,UAAU,UACZ,wBAAIA,UAAU,eACZ,wDACA,wBAAIA,UAAU,kBACZ,4BACE,+DAEF,4BACE,yDAEF,4BACE,2DAIN,wBAAIA,UAAU,eACZ,wDACA,wBAAIA,UAAU,kBACZ,4BACE,yDAEF,4BACE,2DAIN,wBAAIA,UAAU,eACZ,wDACA,wBAAIA,UAAU,kBACZ,4BACE,2EAEF,4BACE,0EAEF,4BACE,yDAEF,4BACE,+DAEF,4BACE,2DAIN,wBAAIA,UAAU,eACZ,wDACA,wBAAIA,UAAU,kBACZ,4BACE,2DAIN,wBAAIA,UAAU,eACZ,4DC7CKE,EAbU,WACvB,OACE,4BAAQF,UAAU,UAChB,mHACA,uCACA,0DACA,kDACA,qCACA,+CCMSG,EAde,WAC5B,OACE,yBAAKH,UAAU,gBACb,yBACEA,UAAU,qBACVI,IAAI,uMACJC,IAAI,KAEN,0EACA,iDCQSC,EAjBe,WAC5B,OACE,yBAAKN,UAAU,gBACb,yBACEA,UAAU,qBACVI,IAAI,uMACJC,IAAI,KAEN,kDACA,kEACA,mEACA,kEACA,qECISE,EAhBe,WAC5B,OACE,yBAAKP,UAAU,gBACb,yBACEA,UAAU,qBACVI,IAAI,uMACJC,IAAI,KAEN,wDACA,yQAC0C,OCGjCG,EAVc,WAC3B,OACE,6BAASR,UAAU,YACjB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCMSS,EAbY,WACzB,OACE,8BACE,yBACET,UAAU,aACVI,IAAI,uMACJC,IAAI,yCAEN,kBAAC,EAAD,QCYSK,EAhBO,WACpB,OACE,yBAAKV,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOW,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,SACpC,kBAAC,IAAD,CAAOF,KAAK,QAAQC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,EAAD,WAG5C,kBAAC,EAAD,QCNcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.290cb6b4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header: React.FC = () => {\n  return (\n    <header className=\"header\">\n      <h1>恩霖信心聖經教會</h1>\n      <h2>Shower of Grace Faith Bible Church</h2>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Navbar: React.FC = () => {\n  return (\n    <nav>\n      <ul className=\"navbar\">\n        <li className=\"navbar-menu\">\n          <h2>關於我們</h2>\n          <ul className=\"navbar-submenu\">\n            <li>\n              <h3>信仰與使命</h3>\n            </li>\n            <li>\n              <h3>教會簡史</h3>\n            </li>\n            <li>\n              <h3>聚會時間</h3>\n            </li>\n          </ul>\n        </li>\n        <li className=\"navbar-menu\">\n          <h2>教會活動</h2>\n          <ul className=\"navbar-submenu\">\n            <li>\n              <h3>主日週報</h3>\n            </li>\n            <li>\n              <h3>活動照片</h3>\n            </li>\n          </ul>\n        </li>\n        <li className=\"navbar-menu\">\n          <h2>教會事工</h2>\n          <ul className=\"navbar-submenu\">\n            <li>\n              <h3>兒童事工 Children Ministry</h3>\n            </li>\n            <li>\n              <h3>英文事工 English Ministry</h3>\n            </li>\n            <li>\n              <h3>小組聚會</h3>\n            </li>\n            <li>\n              <h3>成人主日學</h3>\n            </li>\n            <li>\n              <h3>門徒訓練</h3>\n            </li>\n          </ul>\n        </li>\n        <li className=\"navbar-menu\">\n          <h2>社區中心</h2>\n          <ul className=\"navbar-submenu\">\n            <li>\n              <h3>舞蹈學校</h3>\n            </li>\n          </ul>\n        </li>\n        <li className=\"navbar-menu\">\n          <h2>支持我們</h2>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"footer\">\n      <h3>恩霖信心聖經教會 Shower of Grace Faith Bible Church</h3>\n      <h3>Address</h3>\n      <h3>163-16 Pidgeon Meadow Road</h3>\n      <h3>Flushing, NY 11367</h3>\n      <h3>Phone</h3>\n      <h3>(917)563-5650</h3>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst MainModCol1: React.FC = () => {\n  return (\n    <div className=\"main-mod-col\">\n      <img\n        className=\"main-mod-col-image\"\n        src=\"https://img.thedailybeast.com/image/upload/c_crop,d_placeholder_euli9k,h_1440,w_2560,x_0,y_0/dpr_1.5/c_limit,w_1044/fl_lossy,q_auto/v1522517022/180331-_Parini_Taking_Back_Christianity-hero__tejwex\"\n        alt=\"\"\n      />\n      <h2>主日崇拜線上看</h2>\n      <h3>Link to YouTube</h3>\n    </div>\n  );\n};\n\nexport default MainModCol1;\n","import React from \"react\";\n\nconst MainModCol2: React.FC = () => {\n  return (\n    <div className=\"main-mod-col\">\n      <img\n        className=\"main-mod-col-image\"\n        src=\"https://img.thedailybeast.com/image/upload/c_crop,d_placeholder_euli9k,h_1440,w_2560,x_0,y_0/dpr_1.5/c_limit,w_1044/fl_lossy,q_auto/v1522517022/180331-_Parini_Taking_Back_Christianity-hero__tejwex\"\n        alt=\"\"\n      />\n      <h2>禱告會</h2>\n      <h3>主日上午 8:30-9:00</h3>\n      <h3>週一上午 9:00-10:00</h3>\n      <h3>週三晚上 7:30-9:00</h3>\n      <h3>週五上午 9:00-10:00</h3>\n    </div>\n  );\n};\n\nexport default MainModCol2;\n","import React from \"react\";\n\nconst MainModCol3: React.FC = () => {\n  return (\n    <div className=\"main-mod-col\">\n      <img\n        className=\"main-mod-col-image\"\n        src=\"https://img.thedailybeast.com/image/upload/c_crop,d_placeholder_euli9k,h_1440,w_2560,x_0,y_0/dpr_1.5/c_limit,w_1044/fl_lossy,q_auto/v1522517022/180331-_Parini_Taking_Back_Christianity-hero__tejwex\"\n        alt=\"\"\n      />\n      <h2>教會消息</h2>\n      <h3>\n        為配合紐約政府抗疫規定，教會辦公室和建築物暫時關閉。主日崇拜以線上直播方式進行{\" \"}\n      </h3>\n    </div>\n  );\n};\n\nexport default MainModCol3;\n","import React from \"react\";\nimport MainModCol1 from \"./MainModCol1\";\nimport MainModCol2 from \"./MainModCol2\";\nimport MainModCol3 from \"./MainModCol3\";\n\nconst MainModule: React.FC = () => {\n  return (\n    <section className=\"main-mod\">\n      <MainModCol1 />\n      <MainModCol2 />\n      <MainModCol3 />\n    </section>\n  );\n};\n\nexport default MainModule;\n","import React from \"react\";\nimport MainModule from \"../components/MainModule\";\n\nconst HomePage: React.FC = () => {\n  return (\n    <main>\n      <img\n        className=\"home-image\"\n        src=\"https://img.thedailybeast.com/image/upload/c_crop,d_placeholder_euli9k,h_1440,w_2560,x_0,y_0/dpr_1.5/c_limit,w_1044/fl_lossy,q_auto/v1522517022/180331-_Parini_Taking_Back_Christianity-hero__tejwex\"\n        alt=\"经历神的大能\"\n      />\n      <MainModule />\n    </main>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport HomePage from \"./pages/HomePage\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Navbar />\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact render={() => <HomePage />} />\n          <Route path=\"/home\" exact render={() => <HomePage />} />\n        </Switch>\n      </Router>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}